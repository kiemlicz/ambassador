---
apiVersion: v1
kind: Namespace
metadata:
  name: provisioning
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: salt-master
  namespace: provisioning
  labels:
    app: salt-master
spec:
  replicas: 1
  selector:
    matchLabels:
      app: salt-master
  template:
    metadata:
      labels:
        app: salt-master
    spec:
      hostname: master
      containers:
        - name: salt-master
          image: salt_master
          imagePullPolicy: Never
          ports:
            - containerPort: 4505
            - containerPort: 4506
          volumeMounts:
          - mountPath: /etc/kubernetes
            name: kubeconfig
          - mountPath: /var/log/salt/
            name: varlogsalt
      volumes:
        - name: kubeconfig
          hostPath:
            path: /home/travis/.kube
        - name: varlogsalt
          hostPath:
            path: /var/log/salt/
            type: DirectoryOrCreate
---
kind: Service
apiVersion: v1
metadata:
  name: salt-master
  namespace: provisioning
spec:
  selector:
    app: salt-master
  ports:
    - protocol: TCP
      name: pubsub
      port: 4505
      targetPort: 4505
    - protocol: TCP
      name: reqreply
      port: 4506
      targetPort: 4506
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: salt
  namespace: provisioning
  labels:
    app: salt-minion
spec:
  selector:
    matchLabels:
      name: salt-minion
  template:
    metadata:
      labels:
        name: salt-minion
    spec:
      containers:
        - name: salt-minion
          image: salt_minion
          imagePullPolicy: Never
          volumeMounts:
            - name: dockersock
              mountPath: /var/run/docker.sock
            - name: varlogsalt
              mountPath: /var/log/salt/
      terminationGracePeriodSeconds: 30
      volumes:
        - name: dockersock
          hostPath:
            path: /var/run/docker.sock
            type: Socket
        - name: varlogsalt
          hostPath:
            path: /var/log/salt/
            type: DirectoryOrCreate
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: fluentd
  namespace: provisioning
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: provisioning
  name: fluentd
rules:
  - apiGroups:
      - ""
    resources:
      - pods
      - namespaces
    verbs:
      - get
      - list
      - watch
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: fluentd
roleRef:
  kind: ClusterRole
  name: fluentd
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: fluentd
    namespace: provisioning
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: fluentd-cm
  namespace: provisioning
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
data:
  fluent.conf: |-
    #<system>
    #  log_level debug
    #</system>
    # minion is present by default in fluentd's kubernetes.conf
    <source>
      @id master
      @type tail
      format multiline
      format_firstline /^(?<time>[^ ]* [^ ]*)[^\[]*\[[^\]]*\]\[(?<severity>[^ \]]*) *\][^\[]*\[[^\]]*\] (?<message>.*)$/
      format1 /^(?<message>\d*\s*[a-zA-Z_]*\s*.*)/
      time_format %Y-%m-%d %H:%M:%S,%N
      path /var/log/salt/master
      pos_file /var/log/fluentd-saltmaster.pos
      #pos_file /tmp/fluentd-saltmaster.pos
      tag salt-master
    </source>

    <source>
      @id minion
      @type tail
      format multiline
      format_firstline /^(?<time>[^ ]* [^ ]*)[^\[]*\[[^\]]*\]\[(?<severity>[^ \]]*) *\][^\[]*\[[^\]]*\] (?<message>.*)$/
      format1 /^(?<message>\d*\s*[a-zA-Z_]*\s*.*)/
      time_format %Y-%m-%d %H:%M:%S,%N
      path /var/log/salt/minion
      pos_file /var/log/fluentd-saltminion.pos
      #pos_file /tmp/fluentd-saltminion.pos
      tag salt-minion
    </source>

    #<source>
    #  @id masterevents
    #  @type tail
    #  <format>
    #    @type json
    #  </format>
    #  path /var/log/salt/events
    #  pos_file /var/log/saltmasterevents.pos
    #  tag salt
    #</source>

    <match **>
      @type forward
      send_timeout 60s
      recover_wait 10s
      hard_timeout 60s

      <server>
        name rsyslog-service
        host rsyslog-service.provisioning
        port 24224
        weight 60
      </server>

    </match>
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: fluentd-aggregator-cm
  namespace: provisioning
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
data:
  fluent.conf: |-
    #<system>
    #      log_level debug
    #</system>
    <source>
      @type forward
      port 24224
    </source>
    <match **>
      @type stdout
    </match>
---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: fluentd
  namespace: provisioning
  labels:
    k8s-app: fluentd-logging
    version: v1
    kubernetes.io/cluster-service: "true"
spec:
  template:
    metadata:
      labels:
        k8s-app: fluentd-logging
        version: v1
        kubernetes.io/cluster-service: "true"
    spec:
      serviceAccount: fluentd
      serviceAccountName: fluentd
      containers:
        - name: fluentd
          image: fluent/fluentd-kubernetes-daemonset:v1.3-debian-syslog
          env:
            - name:  SYSLOG_HOST
              value: "rsyslog-service.provisioning"
            - name:  SYSLOG_PORT
              value: "514"
          resources:
            limits:
              memory: 200Mi
            requests:
              cpu: 100m
              memory: 200Mi
          volumeMounts:
            - name: varlog
              mountPath: /var/log
            - name: varlibdockercontainers
              mountPath: /var/lib/docker/containers
              readOnly: true
            - name: fluentd-cm
              mountPath: /fluentd/etc/
      terminationGracePeriodSeconds: 30
      volumes:
        - name: varlog
          hostPath:
            path: /var/log
        - name: varlibdockercontainers
          hostPath:
            path: /var/lib/docker/containers
        - name: fluentd-cm
          configMap:
            name: fluentd-cm
---
apiVersion: v1
kind: Service
metadata:
  name: rsyslog-service
  namespace: provisioning
spec:
  selector:
    app: rsyslog
  ports:
    - name: tcp-syslog
      port: 514
      targetPort: 514
      protocol: TCP
    - name: udp-syslog
      port: 514
      targetPort: 514
      protocol: UDP
    - name: fluentd
      port: 24224
      targetPort: 24224
      protocol: TCP
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: rsyslog
  namespace: provisioning
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rsyslog
  template:
    metadata:
      name: rsyslog
      labels:
        app: rsyslog
    spec:
      serviceAccount: fluentd
      serviceAccountName: fluentd
      containers:
        - name: rsyslog
          image: fluent/fluentd-kubernetes-daemonset:v1.3-debian-syslog
          imagePullPolicy: "Always"
          ports:
            - name: in-logs
              containerPort: 24224
            - name: in-logs-http
              containerPort: 9880
          volumeMounts:
            - name: fluentd-aggregator-cm
              mountPath: /fluentd/etc/
      volumes:
        - name: fluentd-aggregator-cm
          configMap:
            name: fluentd-aggregator-cm

#https://github.com/fluent/fluentd-kubernetes-daemonset/blob/master/templates/conf/kubernetes.conf.erb
#https://github.com/fluent/fluentd-kubernetes-daemonset/blob/master/docker-image/v0.12/debian-syslog/conf/kubernetes.conf
