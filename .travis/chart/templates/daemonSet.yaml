apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ .Values.saltMinion.service.name }}
  namespace: {{ include "salt.fullname" . }}
  labels:
    app: {{ .Values.saltMinion.service.name }}
spec:
  selector:
    matchLabels:
      name: {{ .Values.saltMinion.service.name }}
  template:
    metadata:
      labels:
        name: {{ .Values.saltMinion.service.name }}
    spec:
      serviceAccount: {{ include "salt.fullname" . }}
      serviceAccountName: {{ include "salt.fullname" . }}
      {{- if .Values.registry.enable }}
      imagePullSecrets:
        - name: {{ include "salt.fullname" . }}-registry-credentials
      {{- end }}
      containers:
        - name: {{ .Values.saltMinion.service.name }}
          image: {{ .Values.saltMinion.image.repository }}
          imagePullPolicy: {{ .Values.saltMinion.image.pullPolicy }}
          readinessProbe:
            exec:
              command:
                - cat
                - /tmp/salt/healthz
            initialDelaySeconds: 5
            periodSeconds: 5
          volumeMounts:
            - name: dockersock
              mountPath: /var/run/docker.sock
            - name: varlogsalt
              mountPath: /var/log/salt/
      terminationGracePeriodSeconds: 30
      volumes:
        - name: dockersock
          hostPath:
            path: /var/run/docker.sock
            type: Socket
        - name: varlogsalt
          hostPath:
            path: /var/log/salt/
            type: DirectoryOrCreate
---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: {{ .Values.logging.service.name }}
  namespace: {{ include "salt.fullname" . }}
  labels:
    k8s-app: {{ .Values.logging.service.name }}-logging
    version: v1
    kubernetes.io/cluster-service: "true"
spec:
  template:
    metadata:
      labels:
        k8s-app: {{ .Values.logging.service.name }}-logging
        version: v1
        kubernetes.io/cluster-service: "true"
    spec:
      serviceAccount: {{ .Values.logging.service.name }}
      serviceAccountName: {{ .Values.logging.service.name }}
      containers:
        - name: {{ .Values.logging.service.name }}
          image: {{ .Values.logging.image.repository }}:{{ .Values.logging.image.tag }}
          env:
            - name:  SYSLOG_HOST
              value: {{ .Values.logging.service.aggregatorName }}.provisioning
            - name:  SYSLOG_PORT
              value: "514"
          resources:
            limits:
              memory: 200Mi
            requests:
              cpu: 100m
              memory: 200Mi
          volumeMounts:
            - name: varlog
              mountPath: /var/log
            - name: varlibdockercontainers
              mountPath: /var/lib/docker/containers
              readOnly: true
            - name: {{ .Values.logging.service.name }}-cm
              mountPath: /fluentd/etc/
      terminationGracePeriodSeconds: 30
      volumes:
        - name: varlog
          hostPath:
            path: /var/log
        - name: varlibdockercontainers
          hostPath:
            path: /var/lib/docker/containers
        - name: {{ .Values.logging.service.name }}-cm
          configMap:
            name: {{ .Values.logging.service.name }}-cm
