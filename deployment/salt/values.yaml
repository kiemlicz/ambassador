nameOverride: ""
fullnameOverride: "salt-provisioning"

saltMaster:
  replicaCount: 1

  image:
    repository: "envoy-master-debian-stretch"
    tag: "{{ .Chart.AppVersion }}"
    pullPolicy: IfNotPresent

  service:
    name: salt-master

  config:
    custom.conf: |-
      #autosign_file: /etc/salt/master.d/autosign
      #event_return: rawfile_json
      #rawfile_json.filename: /var/log/salt/events
      #log_level: debug
      #log_level_logfile: debug

      engines:
        - thorium: {}

      # queue config
      runner_queue:
        queue: runner_queue
        backend: sqlite

      schedule:
        runner_queue:
          function: queue.process_runner
          minutes: 1
          kwargs:
            quantity: 1

      reactor:
        - 'salt/minion/*/start':
          - /srv/reactor/minion_ready.sls

{{- if .Values.logstash.enabled }}
    logstash.conf: |-
      logstash_udp_handler:
        host: logstash.logging
        port: 1514
        version: 1
        msg_type: logstash
{{- end }}

  cloudProviders: {}

  pillar: |-
    salt:
      kubernetes: {{ "{{" }} salt['sdb.get']("sdb://k8s/daemon_set?name={{ .Values.saltMinion.service.name }}") {{ "}}" }}

  readinessProbe:
    tcpSocket:
      port: publisher
    initialDelaySeconds: 15
    periodSeconds: 20

  livenessProbe:
    tcpSocket:
      port: publisher
    initialDelaySeconds: 60
    periodSeconds: 40

saltMinion:
  image:
    repository: "envoy-minion-debian-stretch"
    tag: "{{ .Chart.AppVersion }}"
    pullPolicy: IfNotPresent

  service:
    name: salt-minion

  config:
    custom.conf: |-
      master: "salt-master"

      mine_functions:
        network.interfaces: []
        network.ip_addrs: []

      logstash_udp_handler:
        host: logstash.logging
        port: 1514
        version: 1
        msg_type: logstash

      beacons:
        status:
          - interval: 45

{{- if .Values.logstash.enabled }}
    logstash.conf: |-
      logstash_udp_handler:
        host: logstash.logging
        port: 1514
        version: 1
        msg_type: logstash
{{- end }}

  readinessProbe:
    exec:
      command:
        - cat
        - /tmp/salt/healthz
    initialDelaySeconds: 30
    periodSeconds: 10

  livenessProbe:
    exec:
      command:
        - cat
        - /tmp/salt/healthz
    initialDelaySeconds: 90
    periodSeconds: 15

storage:
  enabled: false
  createClass: false
  className: "local"

registry:
  enabled: false

persistence:
  enabled: true
  saltPkiResources:
    requests:
      storage: 5Mi
  saltPkiSelector:
    matchLabels:
      role: saltpki
  saltQueueResources:
    requests:
      storage: 128Mi
  saltQueueSelector:
    matchLabels:
      role: saltqueue

volume:
  enabled: false
  reclaimPolicy: Retain
  pki: "/mnt/data/saltpki"
  queue: "/mnt/data/saltqueue"
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/hostname
              operator: In
              values:
                - minikube

logstash:
  enabled: true
  fullnameOverride: "logstash"
  livenessProbe:
    httpGet:
      path: /
      port: monitor
    initialDelaySeconds: 30
    periodSeconds: 30
    timeoutSeconds: 60
    failureThreshold: 6
    successThreshold: 1
  readinessProbe:
    httpGet:
      path: /
      port: monitor
    initialDelaySeconds: 30
    periodSeconds: 30
    timeoutSeconds: 60
    failureThreshold: 6
    successThreshold: 1
  persistence:
    enabled: false
  service:
    ports:
      syslog-udp:
        port: 1514
        targetPort: syslog-udp
        protocol: UDP
      beats:
        port: 5044
        targetPort: beats
        protocol: TCP
  ports:
    - name: syslog-udp
      containerPort: 1514
      protocol: UDP
    - name: beats
      containerPort: 5044
      protocol: TCP
  inputs:
    main: |-
      input {
        udp {
          port => 1514
          codec => json
        }
      }

  outputs:
    main: |-
      output {
        stdout { }
      }
