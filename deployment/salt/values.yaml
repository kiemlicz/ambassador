nameOverride: "salt"
fullnameOverride: ""

serviceAccount:
  create: true

saltMaster:
  replicaCount: 1

  image:
    repository: "envoy-master-debian-buster"
    tag: "latest"
    pullPolicy: IfNotPresent

  service:
    name: salt-master
    annotations: {}

  # /etc/salt/master.d/ config files, must end with .conf suffix
  config: {}

  cloudProviders: {}

  pillar: {}

  # the reactor sls files
  reactor: {}

  # the thorium state tree
  thorium: {}

  apicerts: {}

  readinessProbe:
    tcpSocket:
      port: publisher
    initialDelaySeconds: 15
    periodSeconds: 20

  livenessProbe:
    tcpSocket:
      port: publisher
    initialDelaySeconds: 45
    periodSeconds: 40

  startupProbe: {}

  # Deploy Salt Minion container to the Salt Master POD
  minion:
    enabled: false

saltMinion:
  image:
    repository: "envoy-minion-debian-buster"
    tag: "latest"
    pullPolicy: IfNotPresent

  service:
    name: salt-minion

  config: {}

  # not using --local in minion probes, this way the probe succeeds only when established master communication
  # still not sure if this is good idea (master crash will cause minion restart as well)
  readinessProbe:
    exec:
      command:
        - salt-call
        - --local
        - test.ping
    initialDelaySeconds: 15
    periodSeconds: 20

  livenessProbe:
    exec:
      command:
        - salt-call
        - --local
        - test.ping
    initialDelaySeconds: 45
    periodSeconds: 40

  # typically when --local is used for readiness/liveness probe the startup probe shouldn't be defined
  startupProbe: {}

  # pick nodes where Salt Minion should be deployed
  nodeSelector: {}

# alter the Salt capabilities, set roles that best suit the needs
clusterRole:
  resources:
    - pods
    - namespaces
    - statefulsets
    - daemonsets
    - deployments
  verbs:
    - get
    - list
    - watch

storage:
  enabled: false
  createClass: false
  className: "local"

registry:
  enabled: false

persistence:
  enabled: true
  saltPkiResources:
    requests:
      storage: 5Mi
  saltPkiSelector: {}
  saltQueueResources:
    requests:
      storage: 128Mi
  saltQueueSelector: {}

volume:
  enabled: false
  reclaimPolicy: Retain
  pki: "/mnt/data/saltpki"
  queue: "/mnt/data/saltqueue"
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/hostname
              operator: In
              values:
                - minikube

logstash:
  enabled: false
  livenessProbe:
    httpGet:
      path: /
      port: monitor
    initialDelaySeconds: 30
    periodSeconds: 30
    timeoutSeconds: 60
    failureThreshold: 6
    successThreshold: 1
  readinessProbe:
    httpGet:
      path: /
      port: monitor
    initialDelaySeconds: 30
    periodSeconds: 30
    timeoutSeconds: 60
    failureThreshold: 6
    successThreshold: 1
  service:
    ports:
      syslog-udp:
        port: 1514
        targetPort: syslog-udp
        protocol: UDP
      beats:
        port: 5044
        targetPort: beats
        protocol: TCP
  ports:
    - name: syslog-udp
      containerPort: 1514
      protocol: UDP
    - name: beats
      containerPort: 5044
      protocol: TCP
