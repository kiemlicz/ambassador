require 'fileutils'
require 'erb'
require 'csv'

Vagrant.configure("2") do |config|
  def materialize(render, filename)
    FileUtils.mkdir_p(File.dirname(filename)) unless Dir.exist?(File.dirname(filename))
    File.open(filename, "w") do |f|
      f.write render
    end
  end

  def materialize_recursively(path, target, binding)
    Dir[path + "/*"].each { |f|
        if File.directory?(f)
          materialize_recursively(f, File.join(target, File.basename(f)), binding)
        elsif File.file?(f) and File.extname(f) == ".erb"
          materialize(ERB.new(File.read(f)).result(binding), File.join(target, File.basename(f, ".erb")))
        else
          FileUtils.mkdir_p(target) unless Dir.exist?(target)
          FileUtils.cp(f, target)
        end
    }
  end

  config.vm.provision "common tools", type: "shell", env: {
    "CONTAINER_USERNAME" => ENV['CONTAINER_USERNAME'],
    "CONTAINER_NAME" => ENV['CONTAINER_NAME'],
    "CONTAINER_FQDN" => ENV['CONTAINER_FQDN']
    } do |s|
    s.inline = <<-SHELL
        sudo apt-get update
        apt-get upgrade -y -o DPkg::Options::=--force-confold
        sudo apt-get install -y rsync
    SHELL
  end

  # extract outside and set default if it fails upon empty USERS env
  CSV.parse_line(ENV['USERS']).each do |u|
    config.vm.provision "#{u} key", type: "shell", env: {"CONTAINER_USERNAME" => ENV['CONTAINER_USERNAME']} do |s|
        ssh_pub_key = File.readlines("#{Dir.home(u)}/.ssh/id_rsa.pub").first.strip
        s.inline = <<-SHELL
            user_dir=$(eval echo "~$CONTAINER_USERNAME")
            mkdir -p $user_dir/.ssh/
            echo #{ssh_pub_key} >> $user_dir/.ssh/authorized_keys
            #todo  verify permissions of authorized_keys
        SHELL
    end
  end
end
