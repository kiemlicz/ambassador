# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|

  config.vm.box = "debian/buster64"
  config.vm.hostname = "zeus"

  config.vm.define "zeus" do |node|
    node.vm.provider :lxc do |lxc|
      lxc.container_name = :machine
      lxc.backingstore = 'best'
      lxc.fetch_ip_tries = 30
      lxc.customize "net.0.type", "veth"
      lxc.customize "net.0.link", "virbr1"
      lxc.customize "net.0.flags", "up"
    end
  end

  config.vm.provision "file", source: "~/local/keepass/ambassador.kdbx", destination: "~/local/keepass/ambassador.kdbx"
  config.vm.provision "file", source: "~/local/keys/ambassador.key", destination: "~/local/keys/ambassador.key"
  config.vm.provision "file", source: "~/local/keys/cfg_ro.key", destination: "~/local/keys/cfg_ro"
  config.vm.provision "file", source: "~/local/keys/cfg_ro.key.pub", destination: "~/local/keys/cfg_ro.pub"
  config.vm.provision "file", source: "~/local/keys/pillargpg.gpg", destination: "~/local/keys/pillargpg.gpg"
  config.vm.provision "file", source: "~/local/keys/pillargpg.gpg.pub", destination: "~/local/keys/pillargpg.gpg.pub"
  config.vm.synced_folder "../salt", "/srv/salt"
  if File.file?("minion-zeus.override.conf")
    config.vm.provision "file", source: "minion-zeus.override.conf", destination: "minion-zeus.override.conf"
  else
    config.vm.provision "fail", type: "shell" do |s|
      s.inline = <<-SHELL
          >&2 echo "minion-zeus.override.conf was not found in .test/minion-zeus.override.conf, create this file"
          exit 3
      SHELL
    end
  end

  config.vm.provision "salt deps", type: "shell", env: {"SHELL": "/bin/bash"} do |s|
    s.path = "https://gist.githubusercontent.com/kiemlicz/1aa8c2840f873b10ecd744bf54dcd018/raw/e0985c4e8f9bf5c66923a1fb22b2df197504b3ea/setup_salt_requisites.sh"
  end

  config.vm.provision :salt do |salt|
    salt.masterless = true
    # https://github.com/saltstack/salt/issues/55437
    salt.run_highstate = false
    salt.minion_config = "minion-zeus.conf"
    salt.bootstrap_options = "-x python3"
    salt.python_version = 3
  end
  config.vm.provision "salt keys and provision", type: "shell", env: {"SHELL": "/bin/bash"} do |s|
    s.inline = <<-SHELL
        # must be installed here since masterless run may require it...
        pip3 install --upgrade pykeepass
        gpg --homedir /etc/salt/gpgkeys --import /home/vagrant/local/keys/pillargpg.gpg
        # so that kichen-salt could export this
        chown vagrant -R /etc/salt/gpgkeys
        salt-call --local saltutil.sync_all
        salt-call --local state.highstate
    SHELL
  end
end
